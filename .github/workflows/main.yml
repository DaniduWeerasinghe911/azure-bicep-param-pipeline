name: Global Solution Onboarding - Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
          

env:
  service_tier: global
  environment: "test" # path to directory containing bicep template
  location:  "australiaeast"  # location for resource deployment in azure
  test_subscription_id: "cef2460d-0ed3-4c43-ab44-2efa10dd34bb" # azure subscription id (not required for tenant level deployments)
  oidc_app_reg_client_id: "e55a0432-ad8c-49b0-ad93-5f621fde422b" # client id of the azure application registration used to authenticate to azure using oidc, refer to https://learn.microsoft.com/en-us/azure/active-directory/develop/workload-identity-federation-create-trust?pivots=identity-wif-apps-methods-azp#github-actions
  azure_tenant_id: "78be17d2-30b3-4f7d-91c9-236348af26d9" # azure ad tenant/directory id
  workloadTier:  'global'


jobs:
  initialise_vars:
    runs-on: windows-latest
    outputs:
      service_tier: ${{ env.service_tier }}
      test_subscription_id: ${{ env.test_subscription_id }}
      location: ${{ env.location }}
      oidc_app_reg_client_id: ${{ env.oidc_app_reg_client_id }}
      azure_tenant_id: ${{ env.azure_tenant_id }}
      environment: ${{ env.environment }}
      workloadTier: ${{ env.workloadTier }}
    steps:
      - name: Initialise Variables
        run: echo "Initialising environment variables"

  post_configuration:
    needs: [initialise_vars]
    runs-on: ubuntu-latest
    environment: ${{ needs.initialise_vars.outputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      # - name: Login to Azure
      #   uses: azure/login@v1.4.6
      #   with:
      #     client-id: ${{ needs.initialise_vars.outputs.oidc_app_reg_client_id }}
      #     tenant-id: ${{ needs.initialise_vars.outputs.azure_tenant_id }}
      #     allow-no-subscriptions: true
      #     enable-AzPSSession: true

      - name: Get all changed param files
        id: changed-markdown-files
        uses: tj-actions/changed-files@v44
        with:
          # Avoid using single or double quotes for multiline patterns
          files: |
            '**/test/**.bicepparam


      - name: List all changed files markdown files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
            echo ${{ steps.changed-markdown-files.outputs.all_changed_files }}
          done          
          

      # - name: Sets Environment Variables
      #   env:
      #     ALL_CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.all_changed_files }}
      #   uses: azure/powershell@v1
      #   with:
      #     inlineScript: |
      #           $Results = @()
      #           $filePaths= "${{ env.ALL_CHANGED_FILES }}"
      #           $splitFilePaths =$filePaths.Split(" ")
      #           if ($splitFilePaths) {
      #             foreach ($filePath in $splitFilePaths){
      #                 $fileContent = Get-Content -Path $filePath
      #                 $searchPattern = "using"
      #                 $templateFilePath = $fileContent | ForEach-Object {
      #                     # Check if the line contains the search pattern
      #                     if ($_ -match $searchPattern) {
      #                         # Capture the part between single quotes
      #                         if ($_ -match "'([^']*)'") {
      #                             $capturedText = $matches[1]
      #                             Write-Output $capturedText
      #                         }
      #                     }
      #                 } 
      #                 $templateFilePath
      #                 $paramRootPath = Split-Path -parent $filePath
      #                 $paramFileName = Split-Path -leaf $filePath
      #                 $obj = New-Object -TypeName psobject 
      #                 $obj | Add-member -name 'templateFilePath' -Membertype "Noteproperty" -Value $templateFilePath
      #                 $obj | Add-member -name 'paramRootPath' -Membertype "Noteproperty" -Value $paramRootPath
      #                 $obj | Add-member -name 'paramFileName' -Membertype "Noteproperty" -Value $paramFileName
      #                 $Results += $obj
      #               }
                    
      #             }  
      #           else {
      #               Write-Host "A line starting with 'using '<space>' was not found in the file."
      #           }

      #           $jsonString = $Results | ConvertTo-Json
      #           $jsonString | Out-File -FilePath objectArray.json

      #           # echo "paramFileArray="$jsonString"" >> $env:GITHUB_ENV
                
      #     azPSVersion: latest    
  
      # - name: Preview a Resource
      #   uses: azure/powershell@v1
      #   with:
      #     inlineScript: |
      #       $params = Get-Content objectArray.json
      #       $objectArrayFromJson = $params | ConvertFrom-Json
      #       write-output $objectArrayFromJson
      #       foreach ($param in $objectArrayFromJson){
      #             push-location $param.paramRootPath
      #             az account set --subscription  ${{ env.test_subscription_id }}
      #             az deployment sub what-if `
      #               --name 'deploy_project_resourcegroup' `
      #               --location '${{ env.location }}' `
      #               --subscription ${{ env.test_subscription_id }} `
      #               --template-file $param.templateFilePath `
      #               --parameters $param.paramFileName                
      #             pop-location
      #             write-output "Current directory: $(Get-Location)"
      #       }
      #     azPSVersion: latest     

      # - name: Deploy a Resource
      #   uses: azure/powershell@v1
      #   with:
      #     inlineScript: |
      #       $params = Get-Content objectArray.json
      #       $objectArrayFromJson = $params | ConvertFrom-Json
      #       foreach ($param in $objectArrayFromJson){
      #             set-location -path $param.paramRootPath
      #             az account set --subscription  ${{ env.test_subscription_id }}
      #             az deployment sub create `
      #               --name 'deploy_project_resourcegroup' `
      #               --location '${{ env.location }}' `
      #               --subscription ${{ env.test_subscription_id }} `
      #               --template-file $param.templateFile `
      #               --parameters $param.paramFileName
      #       }
      #     azPSVersion: latest 
